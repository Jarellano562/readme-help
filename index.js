
// TODO: Include packages needed for this application
const fs = require("fs");
const util = require("util");
const inquirer = require("inquirer");
const generateReadme = require("./utils/generateMarkdown")
const writeFileAsync = util.promisify(fs.writeFile);

// TODO: Create an array of questions for user input
function questions() {
    return inquirer.prompt([
        {
            type: "input",
            name: "projectTitle",
            message: "What is the title of the project?",
        },
        {
            type: "input",
            name: "description",
            message: "Write a description of your project: "
        },
        {
            type: "input",
            name: "installation",
            message: "Describe the installation process that was used for your project: ",
        },
        {
            type: "input",
            name: "usage",
            message: "What is the usage of this project?"
        },
        {
            type: "list",
            name: "license",
            message: "Chose the appropriate license for this project: ",
            choices: [
                "Academic",
                "GNU",
                "ISC",
                "MIT",
                "Open"
            ]
        },
        {
            type: "input",
            name: "contributing",
            message: "Who are the contributors to this project?"
        },
        {
            type: "input",
            name: "tests",
            message: "Were there any tests included in this project?"
        },
        {
            type: "input",
            name: "questions",
            message: "What do I do if I have an issue? "
        },
        {
            type: "input",
            name: "username",
            message: "Please enter your GitHub username: "
        },
        {
            type: "input",
            name: "email",
            message: "Please enter your email: "
        }
    ]);
}

// TODO: Create a function to initialize app
//"async" before a function means one simple thing: a function always returns a promise -
//other values are wrapped in a resolved promise automatically 
async function init() {
    //try wrapped in catch - then the promise generated by the call of the async function
    try {
        //Responses
        const answers = await questions();
        //await - makes JS until that promise settles and retuens the result 
        const generateContent = generateReadme(answers);
        // TODO: Create a function to write README file
        await writeFileAsync('./dist/README.md', generateContent);
        console.log('✔️  Successfully wrote to README.md');
        //Need this or we get an unhandled promise error. we can catch such errors using a global 
        //"unhandledrejection" event handler with the err 
    } catch (err) {
        console.log(err);
    }
}

// Function call to initialize app
init();  